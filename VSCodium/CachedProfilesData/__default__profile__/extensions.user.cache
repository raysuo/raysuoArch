{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/raysuo/.vscode-oss/extensions/extensions.json","path":"/home/raysuo/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1730356259221,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.94.2","productDate":"2024-10-12T20:14:54.465Z","productCommit":"62f778783c52510c94e687de293bc2ad230f9a67","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"angular.ng-template","uuid":"a92d457e-6f3f-4167-8087-1a54e1b6e00e"},"manifest":{"name":"ng-template","displayName":"Angular Language Service","description":"Editor services for Angular templates","version":"18.2.0","publisher":"Angular","icon":"angular.png","license":"MIT","keywords":["Angular","multi-root ready"],"engines":{"vscode":"^1.74.3"},"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":"limited","description":"The Language Server Protocol does not support remote file systems. Functionality is limited to syntax highlighting only."}},"categories":["Programming Languages"],"contributes":{"commands":[{"command":"angular.restartNgServer","title":"Restart Angular Language server","category":"Angular"},{"command":"angular.openLogFile","title":"Open Angular Server log","category":"Angular"},{"command":"angular.getTemplateTcb","title":"View Template Typecheck Block","category":"Angular"},{"command":"angular.goToComponentWithTemplateFile","title":"Go to component","category":"Angular"},{"command":"angular.goToTemplateForComponent","title":"Go to template","category":"Angular"}],"menus":{"commandPalette":[{"command":"angular.goToComponentWithTemplateFile","when":"editorLangId == html && !virtualWorkspace"},{"command":"angular.goToTemplateForComponent","when":"editorLangId == typescript && !virtualWorkspace"},{"command":"angular.getTemplateTcb","when":"!virtualWorkspace"}],"editor/context":[{"when":"(resourceLangId == html || resourceLangId == typescript) && !virtualWorkspace","command":"angular.getTemplateTcb","group":"angular"},{"when":"resourceLangId == html && !virtualWorkspace","command":"angular.goToComponentWithTemplateFile","group":"angular"},{"when":"resourceLangId == typescript && !virtualWorkspace","command":"angular.goToTemplateForComponent","group":"angular"}]},"configuration":{"title":"Angular Language Service","properties":{"angular.log":{"type":"string","enum":["off","terse","normal","verbose"],"default":"off","description":"Enables logging of the Angular server to a file. This log can be used to diagnose Angular Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project."},"angular.view-engine":{"type":"boolean","default":false,"description":"Use legacy View Engine language service. This option is incompatible with projects using Angular v13 and above."},"angular.enable-strict-mode-prompt":{"type":"boolean","default":true,"markdownDescription":"Prompt to enable the [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) flag in [angularCompilerOptions](https://angular.io/guide/angular-compiler-options). Note that strict mode is only available when using Ivy."},"angular.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Angular language server."},"angular.suggest.includeAutomaticOptionalChainCompletions":{"type":"boolean","default":true,"markdownDescription":"Enable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled."},"angular.suggest.includeCompletionsWithSnippetText":{"type":"boolean","default":true,"markdownDescription":"Enable snippet completions from Angular language server. Requires using TypeScript 4.3+ in the workspace."},"angular.forceStrictTemplates":{"type":"boolean","default":false,"markdownDescription":"Enabling this option will force the language service to use [strictTemplates](https://angular.io/guide/angular-compiler-options#stricttemplates) and ignore the user settings in the `tsconfig.json`."}}},"grammars":[{"path":"./syntaxes/inline-template.json","scopeName":"inline-template.ng","injectTo":["source.ts"],"embeddedLanguages":{"text.html.derivative":"html","source.css":"css","source.js":"javascript"}},{"path":"./syntaxes/inline-styles.json","scopeName":"inline-styles.ng","injectTo":["source.ts"],"embeddedLanguages":{"source.css.scss":"scss"}},{"path":"./syntaxes/template.json","scopeName":"template.ng","injectTo":["text.html.derivative","source.ts"],"embeddedLanguages":{"text.html":"html","source.css":"css","expression.ng":"javascript"}},{"path":"./syntaxes/template-blocks.json","scopeName":"template.blocks.ng","injectTo":["text.html.derivative","source.ts"],"embeddedLanguages":{"text.html":"html","control.block.expression.ng":"javascript","control.block.body.ng":"html"}},{"path":"./syntaxes/let-declaration.json","scopeName":"template.let.ng","injectTo":["text.html.derivative","source.ts"]},{"path":"./syntaxes/template-tag.json","scopeName":"template.tag.ng","injectTo":["text.html.derivative","source.ts"]},{"path":"./syntaxes/expression.json","scopeName":"expression.ng"}]},"activationEvents":["onLanguage:html","onLanguage:typescript"],"main":"./index","scripts":{"ng-dev":"cross-env TS_NODE_PROJECT=$PWD/.ng-dev/tsconfig.json TS_NODE_TRANSPILE_ONLY=1 node --no-warnings --loader ts-node/esm node_modules/@angular/dev-infra-private/ng-dev/bundles/cli.mjs","compile":"tsc -b && yarn bazel build :npm","compile:client-server":"yarn bazel build //client:index.js //server:index.js","compile:test":"tsc -b test.tsconfig.json","compile:integration":"tsc -b integration && yarn --cwd integration/project build","compile:syntaxes-test":"tsc -b syntaxes/test","build:syntaxes":"tsc -b syntaxes && node dist/syntaxes/build.js","format":"scripts/format.sh","watch":"yarn ibazel build //client:index.js //server:index.js","package":"scripts/build.sh package.json","test":"yarn bazel test --test_tag_filters=unit_test //...","test:watch":"yarn ibazel test --test_tag_filters=unit_test //...","test:lsp":"yarn bazel test --test_output=streamed //integration/lsp:test","test:e2e":"yarn bazel test --test_output=streamed //integration/e2e:test","test:inspect-client":"yarn bazel run --config=debug //client/src/tests:test","test:inspect-common":"yarn bazel run --config=debug //common/tests:test","test:inspect-server":"yarn bazel run --config=debug //server/src/tests:test","test:inspect-syntaxes":"yarn bazel run --config=debug //syntaxes/test:test","test:legacy-inspect":"yarn compile:test && node --inspect-brk node_modules/jasmine/bin/jasmine.js --config=jasmine.json","test:legacy":"yarn compile:test && jasmine --config=jasmine.json","test:legacy-lsp":"yarn compile:integration && jasmine --config=integration/lsp/jasmine.json","test:legacy-e2e":"yarn compile:integration && node dist/integration/e2e","test:legacy-syntaxes":"yarn compile:syntaxes-test && yarn build:syntaxes && jasmine dist/syntaxes/test/driver.js"},"dependencies":{"@angular/language-service":"~18.2.0-rc.0","typescript":"5.5.3","vscode-html-languageservice":"^4.2.5","vscode-jsonrpc":"6.0.0","vscode-languageclient":"7.0.0","vscode-languageserver":"7.0.0","vscode-languageserver-textdocument":"^1.0.7","vscode-uri":"3.0.7"},"devDependencies":{"@angular/dev-infra-private":"https://github.com/angular/dev-infra-private-builds.git#262cb3bb487e8dddb3c404f4f2c8b34a9a1f14c2","@angular/core":"^18.1.0-rc.0","@bazel/bazelisk":"1.18.0","@bazel/ibazel":"0.16.2","@types/jasmine":"3.10.7","@types/node":"18.19.39","@types/vscode":"1.67.0","clang-format":"1.8.0","cross-env":"^7.0.3","esbuild":"0.14.39","jasmine":"3.99.0","prettier":"2.7.1","rxjs":"6.6.7","ts-node":"^10.8.1","tslint":"6.1.3","tslint-eslint-rules":"5.4.0","vsce":"1.100.1","vscode-languageserver-protocol":"3.16.0","vscode-languageserver-types":"3.16.0","vscode-test":"1.6.1","vscode-tmgrammar-test":"0.0.11"},"repository":{"type":"git","url":"https://github.com/angular/vscode-ng-language-service"}},"location":{"$mid":1,"path":"/home/raysuo/.vscode-oss/extensions/angular.ng-template-18.2.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Angular","metadata":{"installedTimestamp":1730356203320,"source":"gallery","id":"a92d457e-6f3f-4167-8087-1a54e1b6e00e","publisherId":"5a69cff0-bd3b-4074-999f-4952fc2b037a","publisherDisplayName":"Angular","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"johnpapa.angular2","uuid":"214cbfb9-7c06-4467-bad4-357ae83eb587"},"manifest":{"name":"Angular2","publisher":"johnpapa","displayName":"Angular Snippets (Version 18)","description":"Angular version 18 snippets by John Papa","version":"18.0.2","icon":"images/angular-shield.png","galleryBanner":{"color":"#0273D4","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/johnpapa/vscode-angular-snippets.git"},"keywords":["Angular","Angular 18","TypeScript","HTML"],"engines":{"vscode":"^1.40.0"},"scripts":{"package":"npx vsce package","publish":"npx vsce publish","postinstall":"node ./node_modules/vscode/bin/install","open-in-browser":"vscode-test-web --extensionDevelopmentPath=. ."},"extensionKind":["ui","workspace"],"categories":["Snippets","Other"],"contributes":{"snippets":[{"language":"typescript","path":"./snippets/typescript.json"},{"language":"javascript","path":"./snippets/javascript.json"},{"language":"jsonc","path":"./snippets/jsonc.json"},{"language":"html","path":"./snippets/html.json"},{"language":"dockerfile","path":"./snippets/dockerfile.json"}]},"devDependencies":{"@types/node":"^20.14.10","@vscode/test-web":"^0.0.56","typescript":"^5.5.3","vscode":"*"}},"location":{"$mid":1,"path":"/home/raysuo/.vscode-oss/extensions/johnpapa.angular2-18.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"johnpapa","metadata":{"installedTimestamp":1730356240487,"pinned":false,"source":"gallery","id":"214cbfb9-7c06-4467-bad4-357ae83eb587","publisherId":"4434843a-4ebf-4f44-84f5-4176380c492d","publisherDisplayName":"johnpapa","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[[2,"property `extensionKind` can be defined only if property `main` is also defined."]]},{"type":1,"identifier":{"id":"bradlc.vscode-tailwindcss","uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5"},"manifest":{"name":"vscode-tailwindcss","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","version":"0.10.2","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json","icon":{"light":"media/icon.png","dark":"media/icon.png"}}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"},{"command":"tailwindCSS.sortSelection","title":"Tailwind CSS: Sort Selection","enablement":"editorHasSelection && resourceScheme == file && tailwindCSS.activeTextEditorSupportsClassSorting"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."}}}},"scripts":{"_esbuild":"node ../../esbuild.mjs src/extension.ts src/server.ts src/cssServer.ts --outdir=dist","dev":"concurrently --raw --kill-others \"npm run watch\" \"npm run check -- --watch\"","watch":"npm run clean && npm run _esbuild -- --watch","build":"npm run check && npm run clean && npm run _esbuild -- --minify && move-file dist/server.js dist/tailwindServer.js && move-file dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package --no-dependencies","publish":"vsce publish --no-dependencies","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"npm run build && npm run copy:notices","clean":"rimraf dist","check":"tsc --noEmit"},"devDependencies":{"@tailwindcss/language-server":"*","@types/braces":"3.0.1","@types/vscode":"1.65.0","@vscode/vsce":"2.21.1","braces":"3.0.2","color-name":"1.1.4","concurrently":"7.0.0","esbuild":"^0.19.5","minimatch":"5.1.4","minimist":"^1.2.8","move-file-cli":"3.0.0","normalize-path":"3.0.0","rimraf":"3.0.2","vscode-languageclient":"8.0.2"}},"location":{"$mid":1,"path":"/home/raysuo/.vscode-oss/extensions/bradlc.vscode-tailwindcss-0.10.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bradlc","metadata":{"installedTimestamp":1730356258584,"pinned":false,"source":"gallery","id":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","publisherId":"84722833-669b-4c7d-920e-b60e43fae19a","publisherDisplayName":"bradlc","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]}]}